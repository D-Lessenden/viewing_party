---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<movie_api_key>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 03:21:31 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a42294fc21b3e73a836176de8ca0807e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - Vbf6RljiecpWLgJQPIIVGCfwksUWxdlbe_VxHJ_HJZJ1Phl-18fnlg==
      Age:
      - '1928'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 03:53:39 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<movie_api_key>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 03:21:31 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1f8c206a24a22fec3642ced62fa01e36.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - Wkpe0Bg47iPGDre4rkpRXNsSrlQX0kFT98t6Oh3jG0bMMpI0qcaa4g==
      Age:
      - '1928'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 03:53:39 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movie_api_key>&language=en-US&page=1&query=fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 03:53:39 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 8977c33cefbea5ee4ef238c3bea8b848.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - 7ybsqwXq8Y3jaYycwMFRhmeVivn6V4PNaGf90ozyAktnrqmgsfI6rQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 03:53:39 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movie_api_key>&language=en-US&page=2&query=fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 03:53:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 210d9ee328e88fcabe1880802aba942a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - ZU-KvWkOW9MwIAmlJyEMxwo3M7V9Lw2mdJQE2KCP3KZXF7uKE0iolA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 03:53:40 GMT
recorded_with: VCR 6.0.0

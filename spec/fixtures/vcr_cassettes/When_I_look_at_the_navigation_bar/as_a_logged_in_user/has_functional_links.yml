---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<movie_api_key>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 16:25:03 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 60910b3e756c29bb113b1d5a76095eb5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - bg8HCTfsbRHSbb1egHlcAC-V2ARa45QFgRkS3oJ1I0mWSeAyBCwF7g==
      Age:
      - '18261'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 21:29:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<movie_api_key>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 16:25:04 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 cac5fe6b62075a9d334d8c4e3ef28ecd.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - _cyH9JSY1C2LqPtu_KIqYV2CS_qJRbTcO6tRHvS4CVaEOVokcYJDyw==
      Age:
      - '18260'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 21:29:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/tv/popular?api_key=<movie_api_key>&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 21:22:32 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 9640b18d737cfe6781325a87b2339aa5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - wrdIhpxFpANrI55Viwbxp5cV0cdTg4Q-BRnV7vssGWX_f9onOYpMQQ==
      Age:
      - '412'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 21:29:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/tv/popular?api_key=<movie_api_key>&language=en-US&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - "<movie_api_key>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 14 Oct 2020 21:22:33 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1f8c206a24a22fec3642ced62fa01e36.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - CG2DOFrJN72C7m-a-PiNXvnt_Eg7XyjXOh-QWMqgYTzXHoZLIRTs6A==
      Age:
      - '411'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Oct 2020 21:29:24 GMT
recorded_with: VCR 6.0.0
